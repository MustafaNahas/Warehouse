name: Warehouse Deployment

on:
  push:
    branches:
      - master

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      - name: Upload Frontend-Build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/*

  build-backend:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Frontend-Build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: backend/src/main/resources/static

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build Backend mit Maven
        run: mvn -B package --file backend/pom.xml

      - name: Upload Backend JAR
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: backend/target/App.jar

  docker-compose-deploy:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Backend JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: backend/target/

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Create .env file for Docker Compose
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env

      - name: Build Docker Compose Images
        run: docker compose build

      - name: Tag Docker Images for DockerHub
        run: |
          docker tag warehouse_backend mustafanahas/warehouse-backend:latest
          docker tag warehouse_backend mustafanahas/warehouse-backend:${{ github.sha }}

      - name: Push Docker Images to DockerHub
        run: |
          docker push mustafanahas/warehouse-backend:latest
          docker push mustafanahas/warehouse-backend:${{ github.sha }}

      - name: Deploy with Docker Compose
        run: docker compose up -d
